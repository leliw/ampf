import jwt
import pytest

from ampf.auth.google_oauth import GoogleOAuth


@pytest.fixture
def google_auth_token() -> str:
    return "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImFiODYxNGZmNjI4OTNiYWRjZTVhYTc5YTc3MDNiNTk2NjY1ZDI0NzgiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIxMDg5MzIwNjUyMDIwLW9kZ21nOGhqZjBlNTNmc20yMHVuMG4xNXNpbXF2Njg5LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiMTA4OTMyMDY1MjAyMC1vZGdtZzhoamYwZTUzZnNtMjB1bjBuMTVzaW1xdjY4OS5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjExMTM3MzA5NjE5Njk4MjgxNDQxNSIsImVtYWlsIjoicGFkYXdhbi5zb2Z3YXJlLmRldmVsb3BlckBnbWFpbC5jb20iLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwibmJmIjoxNzM1NzMzMTY2LCJuYW1lIjoiTWFyY2luIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FDZzhvY0xOOEZkenFOU3h4SWpHOXBTXzYtX25ZdlVuSTBaQXkwWC1kczFPcHc0a0RWWnlkUT1zOTYtYyIsImdpdmVuX25hbWUiOiJNYXJjaW4iLCJpYXQiOjE3MzU3MzM0NjYsImV4cCI6MTczNTczNzA2NiwianRpIjoiNDVmZGMwNjc3ZjU4ZDAxMDJmNGI1MjQ5OGQ2NmJlNWEzZWRmODJjNiJ9.sgJnR_GnksmUyxxEMeQpqxxIq-PIs-2QvIjyzlLSPNYlnMtOqjY7ul3i2ENhL2u3BSpxffNQj7h6B2BWC2NWoZDto4ZN1uCq50rmJT-641noX9CY-wbGKzWmptk31VLmakHJpJK5dU0Jx52gLEx4OyeFNCERf0jJd8E4zFFGnJ59pQgpLRsKRspxIt886SPFREvjMQ05UXQTmoBROUO0F3euedUw_qFq2wbb1c80a2CRqjq2y46f2MphoYypPMAMfdo9HJyUm9Bjj_cgnLBAnPDtRaQq9QHeQE-M7e3Zak4YPg9Xsbn9i_FcAjqisrtcykI1oaHwqmg3nsW5lj0MuA"


def test_verify_jwt(google_auth_token):
    # Given: Token generated by google
    google_oauth = GoogleOAuth()
    # When: Token is verified
    # Then: Exception is raised
    with pytest.raises(jwt.exceptions.ExpiredSignatureError):
        decoded_token = google_oauth.verify_jwt(google_auth_token)
        # Or: Token is valid
        assert "email" in decoded_token
